#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from object_recognition_msgs.msg import ObjectInformation
from sensor_msgs.msg import JointState


class MotionPlanningNode(Node):
    def __init__(self):
        super().__init__('motion_planning_node')
        self.get_logger().info('Motion planning node initialized')
        self.object_info_sub = self.create_subscription(
            ObjectInformation,
            '/object_info/filtered_object_info',
            self.listener_callback,
            10)
        
        self.joint_state_pub = self.create_publisher(JointState, '/joint_state_publisher', 10)

    def listener_callback(self, msg):
        self.get_logger().info('Received object info')
        self.move_to_object(msg.name)
        


    def move_to_object(self, object_name):
        self.get_logger().info('Moving to object: %s', object_name)
        # TODO: Implement motion planning
        pass


def main(args=None):
    rclpy.init(args=args)
    node = MotionPlanningNode()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()